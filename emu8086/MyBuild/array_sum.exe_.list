EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
array_sum.exe_ -- emu8086 assembler version: 4.08  
 
[ 3.07.2022  --  01:58:41 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL SMALL
[   2]        :                                       .DATA
[   3]        :                                       
[   4]    0000: 02 04 06 08                           x db 2,4,6,8
[   5]    0004:                                       lx equ $-x
[   6]    0004: 01 03 05 07 09                        y db 1,3,5,7,9
[   7]    0009:                                       ly equ $-y
[   8]        :                                       
[   9]    0009: 07                                    A db 7
[  10]    000A: 05                                    B db 5
[  11]        :                                       
[  12]    000B: 00                                    TX db ?
[  13]    000C: 00                                    TY db ?
[  14]        :                                       
[  15]        :                                       .CODE
[  16]        :                                       
[  17]    0010: B8 00 00                              mov ax , @data
[  18]    0013: 8E D8                                 mov ds , ax
[  19]        :                                       
[  20]    0015: 8A 26 09 00                           mov ah , A
[  21]    0019: A0 0A 00                              mov al , B
[  22]    001C: B9 00 00                              mov cx , 0
[  23]        :                                       
[  24]    001F: 3A E0                                 cmp ah , al
[  25]    0021: 7F 0B                                 jg BYK
[  26]    0023: 7C 12                                 jl KCK
[  27]        :                                       
[  28]    0025: 88 3E 0B 00                           SON: mov TX , bh
[  29]    0029: 88 1E 0C 00                           mov TY , bl
[  30]    002D: F4                                    hlt
[  31]        :                                       
[  32]    002E: 02 3C                                 BYK: add bh , x[si]
[  33]    0030: 46                                    inc si
[  34]    0031: FE CD                                 dec ch
[  35]    0033: 75 F9                                 jnz BYK
[  36]    0035: EB EE                                 jmp SON
[  37]        :                                       
[  38]        :                                       
[  39]    0037: 02 5C 04                              KCK: add bl , y[si]
[  40]    003A: 46                                    inc si
[  41]    003B: FE C9                                 dec cl
[  42]    003D: 75 F8                                 jnz KCK
[  43]    003F: EB E4                                 jmp SON
[  44]        :                                       
[  45]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 41      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: FC      -   check sum (l.byte)
0013: 6E      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================

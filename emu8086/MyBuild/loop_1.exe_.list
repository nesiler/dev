EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
loop_1.exe_ -- emu8086 assembler version: 4.08  
 
[ 1.07.2022  --  23:03:41 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL SMALL
[   2]        :                                       
[   3]        :                                       Data SEGMENT
[   4]        :                                       
[   5]    0000: 01 02 03 04 05                        sayi db 01H, 02H, 03H, 04H, 05H
[   6]    0005: 00                                    topla db 0
[   7]        :                                       
[   8]        :                                       Data EndS
[   9]        :                                       
[  10]        :                                       Code SEGMENT
[  11]        :                                       
[  12]    0010: B8 00 00                              mov ax, @Data
[  13]    0013: 8E D8                                 mov ds, ax
[  14]        :                                       
[  15]    0015: B9 05 00                              mov cx, 5
[  16]    0018: B8 00 00                              mov ax, 0
[  17]    001B: BE 00 00                              mov si, 0
[  18]        :                                       
[  19]        :                                       
[  20]    001E: 02 04                                 TPL: add al , sayi[si]
[  21]    0020: 46                                    inc si
[  22]        :                                       
[  23]    0021: 49                                    dec cx
[  24]    0022: 75 FA                                 jnz TPL
[  25]        :                                       
[  26]    0024: A2 05 00                              mov topla , al
[  27]        :                                       
[  28]    0027: F4                                    hlt
[  29]        :                                       
[  30]        :                                       Code EndS
[  31]        :                                       
[  32]        :                                       
[  33]        :                                       
[  34]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 28      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 91      -   check sum (l.byte)
0013: 56      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================

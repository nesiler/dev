EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
multi_dimensional_array.exe_ -- emu8086 assembler version: 4.08  
 
[ 4.07.2022  --  02:12:39 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL SMALL
[   2]        :                                       .DATA
[   3]        :                                       
[   4]    0000: 01 02 03 04 05 06 07 08 09 0A 0B 0C   x db 1,2,3,4, 5,6,7,8, 9,10,11,12
                                                    
[   5]        :                                       lr equ 3
[   6]        :                                       lc equ 4
[   7]        :                                       
[   8]    000C: 00 00 00 00                           t db 4 DUP(0H)
[   9]        :                                       
[  10]        :                                       S equ 8
[  11]        :                                       .CODE
[  12]        :                                       
[  13]    0010: B8 00 00                              mov ax , @data
[  14]    0013: 8E D8                                 mov ds , ax
[  15]    0015: B8 00 00                              mov ax , 0
[  16]        :                                       
[  17]    0018: BE 00 00                              mov si , 0
[  18]    001B: BF 00 00                              mov di , 0
[  19]    001E: B9 03 00                              mov cx , lr
[  20]        :                                       
[  21]    0021:                                       L1:
[  22]    0021: 51                                    push cx
[  23]    0022: B9 04 00                              mov cx , lc
[  24]    0025: BF 00 00                              mov di , 0
[  25]        :                                       
[  26]    0028:                                       L2:
[  27]    0028: 8A 04                                 mov al , x[si]
[  28]    002A: 00 45 0C                              add t[di] , al
[  29]    002D: 47                                    inc di
[  30]    002E: 46                                    inc si
[  31]    002F: E2 F7                                 loop L2
[  32]        :                                       
[  33]    0031: 59                                    pop cx
[  34]    0032: E2 ED                                 loop L1
[  35]        :                                       
[  36]    0034: F4                                    hlt
[  37]        :                                       
[  38]        :                                       
[  39]        :                                       
[  40]        :                                       
[  41]        :                                       
[  42]        :                                       
[  43]        :                                       
[  44]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 35      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: AC      -   check sum (l.byte)
0013: 9F      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
